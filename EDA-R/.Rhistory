read.csv('total_mundo.csv')
df_total <- read.csv('total_mundo.csv')
df_expulsores <- read.csv('expulsores.csv')
df_homicidios <- read.csv('homicides100K.csv')
df_receptores <- read.csv('receptores.csv')
df_remesas <- read.csv('remesas.csv')
View(df_total)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
head(df_total)    # Muestra las primeras filas del DataFrame
str(df_total)     # Proporciona información sobre la estructura de los datos
summary(df_total$Value)    # Resumen estadístico de la columna "Value"
df_top5 <- df_total[df_total$Country.Name %in% c('Spain', 'Belgium', 'Switzerland', 'Denmark', 'Germany'), ]
ggplot(df_top5, aes(x = `Tasa por cada 100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
geom_density(alpha = 0.2, fill = "orange") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K para todos los países") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Crea el histograma de la columna 'Tasa por cada 100K' para todos los países
ggplot(df_top5, aes(x = `Tasa por cada 100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
geom_density(alpha = 0.2, fill = "orange") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K para todos los países") +
theme_minimal()
rlang::last_trace()
library(ggplot2)
library(dplyr)
# Crea el histograma de la columna 'Tasa por cada 100K' para todos los países
ggplot(df_top5, aes(x = `Tasa por cada 100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
geom_density(alpha = 0.2, fill = "orange") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K para todos los países") +
theme_minimal()
df_top5 <- df_homicidios[df_homicidios$Country.Name %in% c('Spain', 'Belgium', 'Switzerland', 'Denmark', 'Germany'), ]
library(ggplot2)
library(dplyr)
# Crea el histograma de la columna 'Tasa por cada 100K' para todos los países
ggplot(df_top5, aes(x = `Tasa por cada 100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
geom_density(alpha = 0.2, fill = "orange") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K para todos los países") +
theme_minimal()
View(df_top5)
df_top5.colnames()
colnames(df_top5)
library(ggplot2)
library(dplyr)
# Crea el histograma de la columna 'Tasa por cada 100K' para todos los países
ggplot(df_top5, aes(x = `Tasa.por.cada.100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
geom_density(alpha = 0.2, fill = "orange") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K para todos los países") +
theme_minimal()
# Calcula la media de la columna 'Tasa por cada 100K'
mean_value <- mean(df_top5$`Tasa.por.cada.100K`)
# Agrega una línea vertical en la media
geom_vline(xintercept = mean_value, color = "red", linetype = "dashed") +
geom_text(
x = mean_value, y = 0,
label = paste("Media:", round(mean_value, 2)),
vjust = 1, hjust = 1.5, color = "red"
)
library(ggplot2)
# Crea un histograma de la columna 'Tasa.por.cada.100K'
ggplot(df_total, aes(x = Tasa.por.cada.100K)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K")
library(ggplot2)
# Crea un histograma de la columna 'Tasa.por.cada.100K'
ggplot(df_total, aes(x = 'Tasa.por.cada.100K')) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K")
library(ggplot2)
# Crea un histograma de la columna 'Tasa.por.cada.100K'
ggplot(df_total, aes(x = `Tasa.por.cada.100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K")
library(ggplot2)
# Crea un histograma de la columna 'Tasa.por.cada.100K'
ggplot(df_top5, aes(x = `Tasa.por.cada.100K`)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(x = "Tasa por cada 100K", y = "Frecuencia") +
ggtitle("Distribución de la tasa por cada 100K")
knitr::opts_chunk$set(echo = '')
*  **A continuacion haremos un analisis exploratorio de los datos de las tablas extraidas para los KPIs sugeridos**
colnames(df_homicidios)
df_homicidios <- read.csv('homicides100K.csv')
colnames(df_homicidios)
View(df_homicidios)
View(df_homicidios)
sum(is.na(df_homicidios))
is.na(df_homicidios)
which(is.na(df_homicidios), arr.ind = TRUE)
